#pragma once


typedef enum _ControllerVendor
    {
    CONTROLLER_VENDOR_SONY,
    CONTROLLER_VENDOR_MICROSOFT,
    CONTROLLER_VENDOR_NINTENDO,
    CONTROLLER_VENDOR_OTHER,
    /* count*/
    CONTROLLER_VENDOR_COUNT
    } ControllerVendor;

typedef enum _ControllerDevice
    {
    /* Sony */
    CONTROLLER_DEVICE_SONY_FIRST,
    CONTROLLER_DEVICE_SONY_DUALSENSE = CONTROLLER_DEVICE_SONY_FIRST,
    CONTROLLER_DEVICE_SONY_OTHER,
    CONTROLLER_DEVICE_SONY_LAST = CONTROLLER_DEVICE_SONY_OTHER,

    /* Microsoft */
    CONTROLLER_DEVICE_MICROSOFT_FIRST,
    CONTROLLER_DEVICE_MICROSOFT_OTHER = CONTROLLER_DEVICE_MICROSOFT_FIRST,
    CONTROLLER_DEVICE_MICROSOFT_LAST = CONTROLLER_DEVICE_MICROSOFT_OTHER,

    /* Nintendo */
    CONTROLLER_DEVICE_NINTENDO_FIRST,
    CONTROLLER_DEVICE_NINTENDO_SWITCH_PRO = CONTROLLER_DEVICE_NINTENDO_FIRST,
    CONTROLLER_DEVICE_NINTENDO_OTHER,
    CONTROLLER_DEVICE_NINTENDO_LAST = CONTROLLER_DEVICE_NINTENDO_OTHER,

    /* Other */
    CONTROLLER_DEVICE_OTHER_OTHER_FIRST,
    CONTROLLER_DEVICE_OTHER_OTHER = CONTROLLER_DEVICE_OTHER_OTHER_FIRST,
    CONTROLLER_DEVICE_OTHER_OTHER_LAST = CONTROLLER_DEVICE_OTHER_OTHER,

    /* count */   
    CONTROLLER_DEVICE_SONY_COUNT      = 1 + CONTROLLER_DEVICE_SONY_LAST - CONTROLLER_DEVICE_SONY_FIRST,
    CONTROLLER_DEVICE_MICROSOFT_COUNT = 1 + CONTROLLER_DEVICE_MICROSOFT_LAST - CONTROLLER_DEVICE_MICROSOFT_FIRST,
    CONTROLLER_DEVICE_NINTENDO_COUNT  = 1 + CONTROLLER_DEVICE_NINTENDO_LAST - CONTROLLER_DEVICE_NINTENDO_FIRST,
    CONTROLLER_DEVICE_OTHER_COUNT     = 1 + CONTROLLER_DEVICE_OTHER_OTHER_FIRST - CONTROLLER_DEVICE_OTHER_OTHER_LAST,

    CONTROLLER_DEVICE_COUNT = CONTROLLER_DEVICE_SONY_COUNT
                            + CONTROLLER_DEVICE_MICROSOFT_COUNT
                            + CONTROLLER_DEVICE_NINTENDO_COUNT
                            + CONTROLLER_DEVICE_OTHER_COUNT
} ControllerDevice;

/* device specidic enums for component population */

typedef enum _ControllerSonyDualsense
{
/* NOTE: DO NOT REORDER ITEMS in this list! These are the indexes to the BUTTON MAPPING arrays */

    /* controller Buttons*/
    CONTROLLER_SONY_DUALSENSE_BUTTONS_FIRST,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_SQUARE_BUTTOM = CONTROLLER_SONY_DUALSENSE_BUTTONS_FIRST,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_X_BUTTON,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_CIRCLE_BUTTON,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_TRIANGLE_BUTTON,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_L1_TRIGGER,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_R1_TRIGGER,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_L2_TRIGGER,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_R2_TRIGGER,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_OPTION,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_START,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_LEFT_STICK_CLICK,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_RIGHT_STICK_CLICK,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_POWER_BUTTON,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_CENTER_BUTTON,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_MUTE_BUTTON,
    CONTROLLER_SONY_DUALSENSE_BUTTONS_LAST = CONTROLLER_SONY_DUALSENSE_BUTTONS_MUTE_BUTTON,  

    /* controller Axis */
    CONTROLLER_SONY_DUALSENSE_AXIS_FIRST,
    CONTROLLER_SONY_DUALSENSE_AXIS_LEFT_STICK_X = CONTROLLER_SONY_DUALSENSE_AXIS_FIRST,
    CONTROLLER_SONY_DUALSENSE_AXIS_LEFT_STICK_Y,
    CONTROLLER_SONY_DUALSENSE_AXIS_RIGHT_STICK_X,
    CONTROLLER_SONY_DUALSENSE_AXIS_LEFT_TRIGGER,
    CONTROLLER_SONY_DUALSENSE_AXIS_RIGHT_TRIGGER,
    CONTROLLER_SONY_DUALSENSE_AXIS_RIGHT_STICK_Y,
    CONTROLLER_SONY_DUALSENSE_AXIS_LAST = CONTROLLER_SONY_DUALSENSE_AXIS_RIGHT_STICK_Y,

    /* controller D-pad */
    CONTROLLER_SONY_DUALSENSE_DPAD_FIRST,
    CONTROLLER_SONY_DUALSENSE_DPAD_CENTER = CONTROLLER_SONY_DUALSENSE_DPAD_FIRST,
    CONTROLLER_SONY_DUALSENSE_DPAD_UP,
    CONTROLLER_SONY_DUALSENSE_DPAD_UPRIGHT,
    CONTROLLER_SONY_DUALSENSE_DPAD_RIGHT,
    CONTROLLER_SONY_DUALSENSE_DPAD_DOWNRIGHT,
    CONTROLLER_SONY_DUALSENSE_DPAD_DOWN,
    CONTROLLER_SONY_DUALSENSE_DPAD_DOWNLEFT,
    CONTROLLER_SONY_DUALSENSE_DPAD_LEFT,
    CONTROLLER_SONY_DUALSENSE_DPAD_UPLEFT,
    CONTROLLER_SONY_DUALSENSE_DPAD_LAST = CONTROLLER_SONY_DUALSENSE_DPAD_UPLEFT,

    /* count */
    CONTROLLER_SONY_DUALSENSE_BUTTONS_COUNT = 1 + CONTROLLER_SONY_DUALSENSE_BUTTONS_LAST - CONTROLLER_SONY_DUALSENSE_BUTTONS_FIRST,
    CONTROLLER_SONY_DUALSENSE_AXIS_COUNT = 1 + CONTROLLER_SONY_DUALSENSE_AXIS_LAST - CONTROLLER_SONY_DUALSENSE_AXIS_FIRST,
    CONTROLLER_SONY_DUALSENSE_DPAD_COUNT = 1 + CONTROLLER_SONY_DUALSENSE_DPAD_LAST - CONTROLLER_SONY_DUALSENSE_DPAD_FIRST,

    CONTROLLER_SONY_DUALSENSE = CONTROLLER_SONY_DUALSENSE_BUTTONS_COUNT
                              + CONTROLLER_SONY_DUALSENSE_AXIS_COUNT
                              + CONTROLLER_SONY_DUALSENSE_DPAD_COUNT
} ControllerSonyDualsense;



typedef enum _ControllerTriggersFloatData
    {
    CONTROLLER_TRIGGERS_FLOAT_DATA_LEFT_TRIGGER,
    CONTROLLER_TRIGGERS_FLOAT_DATA_RIGHT_TRIGGER,
    /* count */         
    CONTROLLER_TRIGGERS_FLOAT_DATA_COUNT
    } ControllerTriggersFloatData;

typedef enum _ControllerStickAxisFloatData
{
    CONTROLLER_STICK_AXIS_FLOAT_DATA_X,
    CONTROLLER_STICK_AXIS_FLOAT_DATA_Y,
    /* count */         
    CONTROLLER_STICK_AXIS_FLOAT_DATA_COUNT
}ControllerStickAxisFloatData;


