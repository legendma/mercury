#pragma once


typedef enum _ControllerVendor
{
    CONTROLLER_VENDOR_SONY,
    CONTROLLER_VENDOR_MICROSOFT,
    CONTROLLER_VENDOR_NINTNEDO,
    CONTROLLER_VENDOR_OTHER,
    /* count*/
    CONTROLLER_VENDOR_COUNT,
}ControllerVendor;


typedef enum _SonyControllerDevice
{
    SONY_CONTROLLER_DEVICE_DUALSENSE,
    SONY_CONTROLLER_DEVICE_OTHER,
    /* count */   
    SONY_CONTROLLER_DEVICE_COUNT,
}SonyControllerDevice;

typedef enum _MicrosoftControllerDevice
{
    MICROSOFT_CONTROLLER_DEVICE_OTHER,
    /* count */
    MICROSOFT_CONTROLLER_DEVICE_COUNT,
}MicrosoftControllerDevice;

typedef enum _NintendoControllerDevice
{
    NINTENDO_CONTROLLER_DEVICE_SWITCH_PRO,
    NINTENDO_CONTROLLER_DEVICE_OTHER,
    /* count */        
    NINTENDO_CONTROLLER_DEVICE_COUNT,
}NintendoControllerDevice;

typedef enum _OtherControllerDevice
{
    OTHER_CONTROLLER_DEVICE_OTHER,
    /* count */
    OTHER_CONTROLLER_DEVICE_COUNT,
}OtherControllerDevice;


typedef enum _DualSenseAxis
{
    DUALSENSE_AXIS_LEFT_STICK_X,
    DUALSENSE_AXIS_LEFT_STICK_Y,
    DUALSENSE_AXIS_RIGHT_STICK_X,
    DUALSENSE_AXIS_LEFT_TRIGGER,
    DUALSENSE_AXIS_RIGHT_TRIGGER,
    DUALSENSE_AXIS_RIGHT_STICK_Y,
    /* count */
    DUALSENSE_AXIS_COUNT,
}DualSenseRead;


typedef enum _DualSenseButtons
{
    DUALSENSE_BUTTONS_SQUARE_BUTTOM,
    DUALSENSE_BUTTONS_X_BUTTON,
    DUALSENSE_BUTTONS_CIRCLE_BUTTON,
    DUALSENSE_BUTTONS_TRIANGLE_BUTTON,
    DUALSENSE_BUTTONS_L1_TRIGGER,
    DUALSENSE_BUTTONS_R1_TRIGGER,
    DUALSENSE_BUTTONS_L2_TRIGGER,
    DUALSENSE_BUTTONS_R2_TRIGGER,
    DUALSENSE_BUTTONS_OPTION,
    DUALSENSE_BUTTONS_START,
    DUALSENSE_BUTTONS_LEFT_STICK_CLICK,
    DUALSENSE_BUTTONS_RIGHT_STICK_CLICK,
    DUALSENSE_BUTTONS_POWER_BUTTON,
    DUALSENSE_BUTTONS_CENTER_BUTTON,
    DUALSENSE_BUTTONS_MUTE_BUTTON,
    /* count */
    DUALSENSE_BUTTONS__COUNT,
} DualSenseButtons;

typedef enum _DualSenseDPad
{
    DUALSENSE_PAD_CENTER,
    DUALSENSE_DPAD_UP,
    DUALSENSE_DPAD_UPRIGHT,
    DUALSENSE_DPAD_RIGHT,
    DUALSENSE_DPAD_DOWNRIGHT,
    DUALSENSE_DPAD_DOWN,
    DUALSENSE_DPAD_DOWNLEFT,
    DUALSENSE_DPAD_LEFT,
    DUALSENSE_DPAD_UPLEFT,
    /* count */
    DUALSENSE_DPAD_COUNT,
} DualSenseDPad;
